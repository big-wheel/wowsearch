#!/usr/bin/env node

const wowsearchCrypto = require('..')
const concat = require('concat-stream')
const cmd = require('optimist')
  .usage('Usage: cat file | $0 -e [-d]')
  .default({
    encrypt: true,
    decrypt: false,
    help: false,
    version: false,
    publicKeyPath: wowsearchCrypto.defaultOptions.publicKeyPath,
    privateKeyPath: wowsearchCrypto.defaultOptions.privateKeyPath,
    privateKey: wowsearchCrypto.defaultOptions.privateKey,
    publicKey: wowsearchCrypto.defaultOptions.publicKey
  })
  .describe({
    help: 'Show help',
    version: 'Show version',
    encrypt: 'Encrypt input',
    decrypt: 'Decrypt input',
    publicKey:
      'Assign the public key, use $WOWSEARCH_CRYPTO_PUBLIC_KEY by default',
    publicKeyPath:
      'Assign the public key file, use $WOWSEARCH_CRYPTO_PUBLIC_KEY_PATH by default',
    privateKey:
      'Assign the private key file, use $WOWSEARCH_CRYPTO_PRIVATE_KEY by default',
    privateKeyPath:
      'Assign the private key file, use $WOWSEARCH_CRYPTO_PRIVATE_KEY_PATH by default'
  })
  .alias({
    help: 'h',
    version: 'v',
    encrypt: 'e',
    decrypt: 'd'
  })
  .boolean(['encrypt', 'decrypt', 'help', 'version'])

if (cmd.argv.help) {
  return cmd.showHelp()
} else if (cmd.argv.version) {
  console.log(require('../package').version)
} else {
  process.stdin.pipe(
    concat(string => {
      const input = String(string)
      const cry = wowsearchCrypto({
        publicKeyPath: cmd.argv.publicKeyPath,
        publicKey: cmd.argv.publicKey,
        privateKeyPath: cmd.argv.privateKeyPath,
        privateKey: cmd.argv.privateKey
      })

      if (cmd.argv.decrypt) {
        process.stdout.write(cry.decrypt(input))
      } else {
        process.stdout.write(cry.encrypt(input))
      }
    })
  )
}
